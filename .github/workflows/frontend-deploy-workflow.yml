name: Frontend Deploy Workflow

on:
  push: # pull_request:
    branches:
      - main
    paths:
      - 'starter/frontend'
  workflow_dispatch:

jobs:

  test:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: latest

      - name: Install dependencies
        run: npm install
        working-directory: ./starter/frontend

      - name: Test
        run: |
          npm run lint
        working-directory: ./starter/frontend

  build_docker_image:
    runs-on: ubuntu-latest
#    needs:
#      - test

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: latest

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build Docker image
        run: |
          docker buildx build --load --tag frontend-image:${{ github.sha }} .
        working-directory: ./starter/frontend
      - name: Save Docker image to archive
        run: |
          mkdir -p build
          docker save frontend-image:${{ github.sha }} | gzip > build/frontend-image.tar.gz
      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v4
        with:
         name: frontend-image
         path: build/

  push:
    needs: build_docker_image
    runs-on: ubuntu-latest

    steps:
      - name: Download Docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend-image
          path: ./downloaded-artifact

      - name: Load Docker image from archive
        run: |
          ls
#          gunzip -c frontend-image.tar.gz | docker load

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          region: ${{ secrets.AWS_REGION }}

      - name: Push Docker image to Amazon ECR
        run: |
          docker tag frontend-image:${{ github.sha }} ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/frontend:${{ github.sha }}
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/frontend:${{ github.sha }}
